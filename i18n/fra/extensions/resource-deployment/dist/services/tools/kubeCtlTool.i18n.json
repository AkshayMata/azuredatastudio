{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the Source EULA. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"resourceDeployment.KubeCtlDescription": "Runs commands against Kubernetes clusters",
	"resourceDeployment.KubeCtlDisplayName": "kubectl",
	"resourceDeployment.invalidKubectlVersionOutput": "Unable to parse the kubectl version command output: \"{0}\"",
	"resourceDeployment.Kubectl.UpdatingBrewRepository": "updating your brew repository for kubectl installation …",
	"resourceDeployment.Kubectl.InstallingKubeCtl": "installing kubectl …",
	"resourceDeployment.Kubectl.AptGetUpdate": "updating repository information …",
	"resourceDeployment.Kubectl.AptGetPackages": "getting packages needed for kubectl installation …",
	"resourceDeployment.Kubectl.DownloadAndInstallingSigningKey": "downloading and installing the signing key for kubectl …",
	"resourceDeployment.Kubectl.AddingKubectlRepositoryInformation": "adding the kubectl repository information …",
	"resourceDeployment.Kubectl.InstallingKubectl": "installing kubectl …",
	"resourceDeployment.Kubectl.DeletePreviousDownloadedKubectl.exe": "deleting previously downloaded kubectl.exe if one exists …",
	"resourceDeployment.Kubectl.DownloadingAndInstallingKubectl": "downloading and installing the latest kubectl.exe …",
	"resourceDeployment.Kubectl.DeletePreviousDownloadedKubectl": "deleting previously downloaded kubectl if one exists …",
	"resourceDeployment.Kubectl.DownloadingKubectl": "downloading the latest kubectl release …",
	"resourceDeployment.Kubectl.MakingExecutable": "making kubectl executable …",
	"resourceDeployment.Kubectl.CleaningUpOldBackups": "cleaning up any previously backed up version in the install location if they exist …",
	"resourceDeployment.Kubectl.BackupCurrentBinary": "backing up any existing kubectl in the install location …",
	"resourceDeployment.Kubectl.MoveToSystemPath": "moving kubectl into the install location in the PATH …"
}