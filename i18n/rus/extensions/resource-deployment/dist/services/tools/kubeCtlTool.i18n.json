{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the Source EULA. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"resourceDeployment.KubeCtlDescription": "Запускает команды для кластеров Kubernetes",
	"resourceDeployment.KubeCtlDisplayName": "kubectl",
	"resourceDeployment.invalidKubectlVersionOutput": "Не удалось проанализировать выходные данные команды kubectl version: \"{0}\"",
	"resourceDeployment.Kubectl.UpdatingBrewRepository": "обновление репозитория brew для установки kubectl…",
	"resourceDeployment.Kubectl.InstallingKubeCtl": "установка kubectl…",
	"resourceDeployment.Kubectl.AptGetUpdate": "обновление сведений в репозитории…",
	"resourceDeployment.Kubectl.AptGetPackages": "получение пакетов, необходимых для установки kubectl…",
	"resourceDeployment.Kubectl.DownloadAndInstallingSigningKey": "скачивание и установка ключа подписывания для kubectl…",
	"resourceDeployment.Kubectl.AddingKubectlRepositoryInformation": "добавление в репозиторий сведений для kubectl…",
	"resourceDeployment.Kubectl.InstallingKubectl": "установка kubectl…",
	"resourceDeployment.Kubectl.DeletePreviousDownloadedKubectl.exe": "удаление ранее скачанного файла kubectl.exe, если он существует…",
	"resourceDeployment.Kubectl.DownloadingAndInstallingKubectl": "скачивание и установка последней версии файла kubectl.exe…",
	"resourceDeployment.Kubectl.DeletePreviousDownloadedKubectl": "удаление ранее скачанного файла kubectl, если он существует…",
	"resourceDeployment.Kubectl.DownloadingKubectl": "выполняется скачивание последнего выпуска kubectl…",
	"resourceDeployment.Kubectl.MakingExecutable": "установка атрибутов исполняемого файла для kubectl…",
	"resourceDeployment.Kubectl.CleaningUpOldBackups": "очистка всех ранее архивированных версий в расположении установки, если они существуют…",
	"resourceDeployment.Kubectl.BackupCurrentBinary": "архивация имеющихся версий kubectl в расположении установки…",
	"resourceDeployment.Kubectl.MoveToSystemPath": "перемещение kubectl в расположение установки, указанное в переменной PATH…"
}